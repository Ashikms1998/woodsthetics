const main_form = document.getElementById('main_form')

    main_form.addEventListener('submit', (e) => {
      
      let name = document.getElementById("productname").value;
      // let description = document.getElementById("description").value;
      // let image = document.getElementById("fileUploader").value;

      // Reset previous error messages
      document.getElementById("nameError").innerHTML = "";
      // document.getElementById("descriptionError").innerHTML = "";
      // document.getElementById("imageError").innerHTML = "";

      // Validate name (only letters and spaces)
      let nameRegex = /^[a-zA-Z ]+$/;
      if (!nameRegex.test(name)) {
        document.getElementById("nameError").innerHTML = "Name should only contain letters and spaces.";
        e.preventDefault()
        
      }

      // // Validate description (only letters and basic punctuation)
      // if (test(description)) {
      //     document.getElementById("descriptionError").innerHTML = "Description should contain ";
      //     return false;
      // }

      // // Validate image (optional: check if file is selected)
      // if (!image) {
      //     document.getElementById("imageError").innerHTML = "Please select an image.";
      //     return false;
      // }

      // Additional validation logic can be added here

    

    })




   product view



   <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="dist/output.css">
</head>
<%-include('navbar')%>

    <div>
        <!-- search box -->
        <div class="flex justify-center mt-4">
            <form action="#" method="GET" class="hidden lg:block lg:pl-32">
                <label for="topbar-search" class="sr-only">Search</label>
                <div class="mt-1 relative lg:w-64">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <svg class="w-5 h-5 text-gray-500" fill="currentColor" viewBox="0 0 20 20"
                            xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd"
                                d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                                clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <input type="search" name="userSearch" id="userSearch-all"
                        class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-cyan-600 focus:border-cyan-600 block w-full pl-10 p-2.5"
                        placeholder="Search">
                </div>
            </form>
        </div>

        <!-- sort by price -->

        <div class="filter-container pl-10">
            <label for="priceFilter"
                class="form-label flex text-black bg-gray-200 items-center justify-start w-40 py-2 mt-2 text-base font-semibold text-left bg-transparent rounded-lg">Filter
                by Price:</label>
            <select id="priceFilter"
                class="form-label flex text-black bg-gray-200 items-center justify-start w-40 py-2 mt-2 text-base font-semibold text-left bg-transparent rounded-lg"
                onchange="filterByPrice()">
                <option value="lowToHigh"
                    class="form-label flex text-black bg-gray-200 items-center justify-start w-40 py-2 mt-2 text-base font-semibold text-left bg-transparent rounded-lg"">Low to High</option>
        <option value=" highToLow"
                    class="form-label flex text-black bg-gray-200 items-center justify-start w-40 py-2 mt-2 text-base font-semibold text-left bg-transparent rounded-lg"">High to Low</option>
    </select>
</div>
<!-- sort by price ends here -->

<!-- sort by category -->
<form action=" /products" method="post">
                    <div class="filter-container pl-10 mt-10">
                        <label
                            class="form-label flex text-black bg-gray-200 items-center justify-start w-40 py-2 mt-2 text-base font-semibold text-left bg-transparent rounded-lg">Filter
                            by Price:</label>
                        <select id="categoryFilter" name="selectOption">
                            <option value="all"
                                class="form-label flex text-black bg-gray-200 items-center justify-start w-40 py-2 mt-2 text-base font-semibold text-left bg-transparent rounded-lg">
                                Select Category</option>
                            <% categoryFilter.forEach(category=>{ %>
                                <option value="<%=category.categoryname %>"
                                    class="form-label flex text-black bg-gray-200 items-center justify-start w-40 py-2 mt-2 text-base font-semibold text-left bg-transparent rounded-lg">
                                    <%= category.categoryname %>
                                </option>
                                <% }); %>
                        </select>

                        <div class="flex justify-start mt-5">
                            <button type="submit" id="submit"
                                class="bg-gray-200 font-bold text-xs py-2 px-2 rounded">Apply</button>
                        </div>
                    </div>
                    </form>
                    <!-- category sort ends here -->
        </div>

        <body>
            <section id="Projects"
                class="w-fit mx-auto grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-3 justify-items-center justify-center gap-y-20 gap-x-24 mt-10 mb-5">

                <%productData.forEach((product, index)=> {%>
                    <!-- Grid Section - Starts Here-->
                    <%if(product.blocked===true){%>
                        <div data-price="<%= product.price %>"
                            class=" searchable-item-all w-72 bg-white shadow-md rounded-xl duration-500 hover:scale-105 hover:shadow-xl">
                            <a href="/singleproduct/<%=product._id%>">
                                <img id="mainImage" src="<%=product.image[0]%>" alt="<%=product.name%>"
                                    class="h-72 w-72 object-cover rounded-t-xl">
                                <div class="px-4 py-3 w-72">
                                    <span class="text-gray-400 mr-3 uppercase text-xs">
                                        <%=product.brand%>
                                    </span>
                                    <p class="text-lg font-bold text-black truncate block capitalize">
                                        <%=product.productname%>
                                    </p>
                                    <div class="flex items-center">
                                        <p class="text-lg font-semibold  text-black cursor-auto my-3"
                                            data-price="<%= product.price %>">Rs.<%= product.price %>
                                        </p>
    
    
                                        <div class="ml-auto"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                                                fill="currentColor" class="bi bi-bag-plus" viewBox="0 0 16 16">
                                                <path fill-rule="evenodd"
                                                    d="M8 7.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0v-1.5H6a.5.5 0 0 1 0-1h1.5V8a.5.5 0 0 1 .5-.5z" />
                                                <path
                                                    d="M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5z" />
                                            </svg></div>
                                    </div>
                                </div>
                            </a>
                        </div>
                        
                  
                    <%}%>
                
                    <%})%>

            </section>

            <!-- pagination Starts-->



            <div class="flex justify-center mb-5">
                <nav aria-label="Page navigation example">
                    <ul class="inline-flex -space-x-px text-sm">
                        <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                            <a href="?page=1" aria-label="First"
                                class="page-link flex items-center justify-center px-3 h-8 ms-0 leading-tight text-gray-500 bg-white border border-e-0 border-gray-300 rounded-s-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">Previous</a>
                        </li>
                        <% for (let i=1; i <=totalPages; i++) { %>
                            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                <a href="?page=<%= i %>"
                                    class=" page-link flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
                                    <%= i %>
                                </a>
                            </li>
                            <% } %>

                                <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                                    <a href="?page=<%= totalPages %>" aria-label="Last"
                                        class="page-link flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 rounded-e-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">Next</a>
                                </li>
                    </ul>
                </nav>
            </div>

            <!-- pagination ends -->


            <div>
                <%-include('footer')%>
            </div>

            <script>
                kofiWidgetOverlay.draw('mohamedghulam', {
                    'type': 'floating-chat',
                    'floating-chat.donateButton.text': 'Support me',
                    'floating-chat.donateButton.background-color': '#323842',
                    'floating-chat.donateButton.text-color': '#fff'
                });

            </script>
            <script>
                function filterByPrice() {
                    let sortBy = document.getElementById("priceFilter").value;
                    const elements = [...document.getElementById('Projects').children];

                    let sortedElements = elements.sort(function (a, b) {
                        let priceA = parseInt(a.dataset.price);
                        let priceB = parseInt(b.dataset.price);
                        if (sortBy === "highToLow") {
                            return priceB - priceA;
                        } else {
                            return priceA - priceB;
                        }
                    });
                    document.getElementById('Projects').replaceChildren(...sortedElements);
                }

                // document.getElementById('priceFilter').addEventListener('change', filterByPrice);
            </script>

            <script>

                const searchInput = document.getElementById('userSearch-all');
                const searchableItems = document.querySelectorAll('.searchable-item-all');
                //   const noResultsMessage = document.getElementById('noResultsMessage'); 

                // Reference to the message element

                searchInput.addEventListener('input', () => {
                    const searchText = searchInput.value.toLowerCase();
                    let found = false; // Flag to check if any matching items are found

                    searchableItems.forEach(item => {
                        const itemText = item.textContent.toLowerCase();

                        if (itemText.includes(searchText)) {
                            item.style.display = 'block';
                            found = true; // Set the flag to true if a matching item is found
                        } else {
                            item.style.display = 'none';
                        }
                    });


                    // noResultsMessage.style.display = found ? 'none' : 'block';


                });
            </script>
        </body>

</html>





user profile



<!DOCTYPE html>
<html lang="en" x-data="{ addModel: false }">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'>
    <link rel="stylesheet" href="/dist/output.css">
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@2.8.2/dist/alpine.min.js" defer></script>

</head>

<body>
    <%-include('navbar')%>

        <div class=" dark:bg-white bg-white px-96 mt-6">
            <div class="bg-white overflow-hidden shadow rounded-lg border">
                <div class="px-2 py-5 sm:px-6">
                    <h3 class="text-lg leading-6 font-bold text-black">
                        My Details
                    </h3>
                </div>

                <!-- editButton userprofile-->

                <div class="flex items-end justify-end pr-7">
                    <a href="/edituser/<%= user._id %>">
                        <button id="openEditModal"><i class='fa fa-edit'></i></button>
                    </a>
                </div>

                <div class="flex items-center justify-center">
                    <div class="relative w-10 h-10 overflow-hidden bg-gray-100 rounded-full dark:bg-gray-600 mb-5">
                        <svg class="absolute w-12 h-12 text-gray-400 -left-1 " fill="currentColor" viewBox="0 0 20 20"
                            xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
                                clip-rule="evenodd"></path>
                        </svg>
                    </div>
                </div>

                <div id="editModal" class="fixed inset-0 z-50 invisible flex items-center justify-center">
                    <!-- Modal overlay -->
                    <div class="absolute inset-0 bg-black -z-10 opacity-50"></div>

                    <!-- Modal content -->
                    <div class="bg-white p-6 rounded-lg shadow-lg">
                        <h2 class="text-2xl font-bold mb-4">Edit Details</h2>
                        <!-- Form for editing user details -->
                        <form action="/edituser/<%= user._id %>" method="POST">
                            <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
                            <input type="text" id="name" name="name" class="w-full border rounded-md py-2 px-3 mb-3"
                                placeholder="" value="<%= user.name %>">

                            <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                            <input type="email" id="email" name="email" class="w-full border rounded-md py-2 px-3 mb-3"
                                placeholder="" value="<%= user.email %>">

                            <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md">Save
                                Changes</button>
                        </form>

                        <!-- Close button -->
                        <div>
                            <button id="closeEditModal" class="absolute" onclick="closeEditModal()">&times;</button>
                        </div>
                    </div>
                </div>


                <div class="border-t border-gray-200 px-4 py-5 sm:p-0">
                    <dl class="sm:divide-y sm:divide-gray-200">
                        <div class="py-3 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">
                                Full name
                            </dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                                <%=user.name %>
                            </dd>
                        </div>
                        <div class="py-3 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">
                                Email address
                            </dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                                <%= user.email %>
                            </dd>
                        </div>
                    </dl>
                </div>
            </div>
        </div>

        <!--  Address -->

        <div class="grid grid-cols-1 sm:grid-cols-3 gap-6 p-8 mt-10">
            <% user.addressCollection.forEach(function(address) { %>
                <div class="bg-white overflow-hidden shadow rounded-lg border">
                    <div class="px-2 py-5 sm:px-6">
                        <h3 class="text-lg leading-6 font-bold text-black">
                            Address
                        </h3>
                    </div>
                    <div class="border-t border-gray-200 px-4 py-5 sm:p-0">
                        <dl class="sm:divide-y sm:divide-gray-200">
                            <div class="py-3 sm:py-5 sm:grid sm:grid-cols-3 sm:px-6">
                                <dt class="text-sm font-medium text-gray-500">
                                    Address
                                </dt>
                                <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                                    <%= address.address %><br>
                                        <%= address.city %>, <%= address.state %><br>
                                                <%= address.postalcode %><br>
                                                    <%= address.country %>
                                </dd>
                            </div>
                        </dl>
                    </div>
                    <div class="py-3 sm:py-5 sm:grid sm:grid-cols-3  sm:px-6">
                        <dt class="text-sm font-medium text-gray-500">
                            Actions
                        </dt>


                        <!-- address edit   -->

                        <dd class="mt-1 text-sm font-bold text-black sm:mt-0  sm:col-span-2">
                            <!-- Edit Form -->

                            <button id="" type="button"
                                class="btn btn-primary sm:gap-16 openEditAddressModalButton">EDIT</button>
                            <!-- </form> -->
                            <!-- Edit Address Modal -->
                            <div id="" class="editAddressModal fixed inset-0 z-50 hidden overflow-auto bg-smoke-light">
                                <div class="modal-overlay absolute inset-0 -z-10 bg-black opacity-50"></div>

                                <div class="modal-container mx-auto">
                                    <div
                                        class="modal-content bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 mt-20 p-4">
                                        <!-- Close button -->
                                        <div class="flex justify-end items-center">
                                            <button id="closeEditAddressModal"
                                                class="text-gray-700 hover:text-gray-600 focus:outline-none">
                                                <i class="fatimes fa-s"></i>
                                            </button>
                                        </div>

                                        <!-- Form for editing address -->
                                        <!-- Edit Form -->
                                        <form action="/editaddress/<%= address._id %>" method="post" class="mb-4">
                                            <input type="hidden" name="editId">

                                            <!-- Address Field -->
                                            <div class="mb-4">
                                                <label for="address"
                                                    class="block text-sm font-bold text-gray-600">Address:</label>
                                                <input type="text" id="address" name="address"
                                                    value="<%= address.address %>" class="w-full border p-2">
                                            </div>

                                            <!-- City Field -->
                                            <div class="mb-4">
                                                <label for="city"
                                                    class="block text-sm font-bold text-gray-600">City:</label>
                                                <input type="text" id="city" name="city" value="<%= address.city %>"
                                                    class="w-full border p-2">
                                            </div>

                                            <!-- State Field -->
                                            <div class="mb-4">
                                                <label for="state"
                                                    class="block text-sm font-bold text-gray-600">State:</label>
                                                <input type="text" id="state" name="state" value="<%= address.state %>"
                                                    class="w-full border p-2">
                                            </div>

                                            <!-- Postal Code Field -->
                                            <div class="mb-4">
                                                <label for="postalcode"
                                                    class="block text-sm font-bold text-gray-600">Postal Code:</label>
                                                <input type="text" id="pin-id" name="postalcode"
                                                    value="<%= address.postalcode %>" class="w-full border p-2">
                                            </div>
                                            <p id="pinError"></p>

                                            <!-- Country Field -->
                                            <div class="mb-4">
                                                <label for="country"
                                                    class="block text-sm font-bold text-gray-600">Country:</label>
                                                <input type="text" id="country" name="country"
                                                    value="<%= address.country %>" class="w-full border p-2">
                                            </div>

                                            <!-- Submit button -->
                                            <button type="submit" class="btn btn-primary mt-4">Update Address</button>
                                        </form>
                                    </div>
                                </div>
                            </div>

                            <!-- Delete Form -->
                            <form action="/deleteaddress/<%= address._id %>" method="post">
                                <input type="hidden" name="deleteId">
                                <button type="submit" class="btn btn-danger">DELETE</button>
                            </form>
                        </dd>

                    </div>
                </div>
                <% }) %>
        </div>



        <div class="mt-12 pl-6">
            <button @click="addModel = !addModel" type="button"
                class="middle none mt-3 center mr-4 rounded-lg bg-[#111827] py-3 px-6 font-sans text-xs font-bold uppercase text-white shadow-md shadow-blue-500/20 transition-all hover:shadow-lg hover:shadow-blue-500/40 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none">Add
                Address</button>
        </div>

        <!-- //button model -->

        <div class=" mt-10 flex w-full md:w-60 justify-center">
            <!-- modal for adding address -->
            <div x-show="addModel"
                class="fixed text-gray-500 flex items-center justify-center  overflow-auto z-50 bg-black bg-opacity-40 left-0 right-0 top-0 bottom-0"
                x-transition:enter="transition ease duration-300" x-transition:enter-start="opacity-0"
                x-transition:enter-end="opacity-100" x-transition:leave="transition ease duration-300"
                x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                <!-- Modal -->
                <div x-show="addModel" class="bg-white rounded-xl h-[80%] overflow-auto sm:w-3/6  w-96 shadow-2xl p-6 "
                    @click.away="addModel = false">
                    <!-- Title -->
                    <span class="font-bold block text-2xl mb-3">
                        Add New Address
                    </span>
                    <!-- Body -->
                    <div>
                        <form class="mt-3" id="addAddress" action="/userprofile" method="POST">
                            <div>
                                <label class="block md:text-xs float-left text-gray-700">Address
                                </label>
                                <textarea name="address" cols="20" rows="4"
                                   id="address" class="w-full px-4 py-3 rounded-lg placeholder:text-sm bg-gray-200 mt-1 border focus:border-blue-500 focus:bg-white focus:outline-none"
                                    required autofocus="" autocomplete="" placeholder="Enter your address"></textarea>
                                    <div id="addressError" style="color: red;" class="error-message"></div>
                            </div>

                            <div>
                                <label class="block md:text-xs float-left text-gray-700">City</label>
                                <input type="text" name="city" placeholder="City" id="city"
                                    class=" city-address w-full px-4 py-3 rounded-lg placeholder:text-sm bg-gray-200 mt-1 border focus:border-blue-500 focus:bg-white focus:outline-none"
                                    autofocus="" autocomplete="" required>
                                    <div id="sccError" style="color: red;" class="error-message"></div>
                            </div>

                            <div>
                                <label class="block md:text-xs float-left text-gray-700">State</label>
                                <input type="text" name="state" placeholder="State" id="state"
                                    class="state-addAdress w-full px-4 py-3 rounded-lg placeholder:text-sm bg-gray-200 mt-1 border focus:border-blue-500 focus:bg-white focus:outline-none"
                                    autofocus="" autocomplete="" required>
                            </div>
                            <div>
                                <label class="block md:text-xs float-left text-gray-700">Pin</label>
                                <input type="number" name="postalcode" placeholder="Postel Code" id="pin"
                                    class="w-full px-4 py-3 rounded-lg placeholder:text-sm bg-gray-200 mt-1 border focus:border-blue-500 focus:bg-white focus:outline-none"
                                    autofocus="" autocomplete="" >
                                    <div id="pinError" style="color: red;" ></div>
                            </div>
                            <div>
                                <label class="block md:text-xs float-left text-gray-700">Country</label>
                                <input type="text" name="country" placeholder="Country" id="country"
                                    class="country-address w-full px-4 py-3 rounded-lg placeholder:text-sm bg-gray-200 mt-1 border focus:border-blue-500 focus:bg-white focus:outline-none"
                                    autofocus="" autocomplete="" required>
                                    <div id="sccError" style="color: red;" class="error-message"></div>
                            </div>

<p id="global-address-error"></p>
                            <button id="addAddressBtn" type="button"
                                class="w-full block bg-indigo-500 hover:bg-indigo-400 focus:bg-indigo-400 text-white font-semibold rounded-lg
                                                                                                    px-4 py-3 mt-5">SAVE</button>
                        </form>

                    </div>
                </div>
            </div>

        </div>


        <div class="p-3 mt-10 w-auto overflow-hidden h-auto">

            <h4 class="border-b-2 text-lg font-bold">MY ORDERS</h4>
            <table style="width: 100vw;" id="myTable">
                <thead class="bg-black border-b">
                    <tr>

                        <th scope="col" class="text-sm font-medium text-white px-4 py-4 text-left">
                            Order Id
                        </th>
                        <th scope="col" class="text-sm flex justify-center font-medium text-white px-4 py-4 text-left">
                            Payment Id
                        </th>
                        <th scope="col" class="text-sm  font-medium text-white px-4 py-4 text-left">
                            Items
                        </th>
                        <th scope="col" class="text-sm font-medium text-white px-4 py-4 text-left">
                            Total amount
                        </th>

                        <th scope="col" class="text-sm font-medium text-white px-4 py-4 text-left">
                            Payment Mode
                        </th>
                        <th scope="col" class="text-sm font-medium text-white px-4 py-4 text-left">
                            Shipping address
                        </th>
                        <th scope="col" class="text-sm font-medium text-white pl-10 px-4 py-4 text-left">
                            Status
                        </th>
                        <th scope="col" class="text-sm font-medium text-white px-4 py-4 text-left">
                            Action
                        </th>

                    </tr>
                </thead>
                <tbody>

                    <% orderDetails.forEach((pro)=>{ %>
                        <% const address=addressData.find(item=> item._id.equals(pro.shippingAddress)); %>

                            <tr class="bg-white border-b  transition duration-300 ease-in-out hover:bg-gray-100">

                                <td
                                    class=" text-sm overflow-hidden text-gray-900 font-light px-4 max-w-sm py-4 whitespace-nowrap">
                                    <%=pro._id%>
                                </td>

                                <td
                                    class="text-sm overflow-hidden flex justify-center text-gray-900 font-light px-4 max-w-sm py-4 whitespace-nowrap">
                                    COD
                                </td>

                                <td
                                    class="text-sm text-gray-900 font-light max-w-sm overflow-hidden px-4 py-4 whitespace-nowrap">
                                    <% pro.productdetails.forEach(prd=>{ %>
                                        <% let product=productData.find(item=> item._id.equals(prd.productId )) %>
                                            <%= product.productname %> <br>
                                                <%})%>
                                </td>
                                <td
                                    class="text-sm overflow-hidden text-gray-900 font-light px-6 max-w-sm py-4 whitespace-nowrap">
                                    <%=pro.total%>
                                </td>

                                <td class="text-sm text-gray-900 font-light px-4 py-4 whitespace-nowrap">
                                    COD
                                </td>
                                <td class="text-sm text-gray-900 font-light px-4 py-4 whitespace-nowrap">
                                    <%=address?.address%>,<%=address?.city%>,<%=address?.state%>,<%=address?.postalcode%>,<%=address?.country%>
                                </td>

                                <td class="text-sm text-gray-900 font-light px-4 py-4 whitespace-nowrap">

                                    <% if (pro.status=='delivered' ) { %>
                                        <span
                                            class="text-sm text-green-600 font-light px-4 py-4 whitespace-nowrap">DELIVERED</span>
                                        <% }else if (pro.status=='cancelled' ) { %>
                                            <span
                                                class="text-sm text-red-700 font-light px-4 py-4 whitespace-nowrap">CANCELLED</span>

                                            <% }else if (pro.status=='PENDING' ){ %>
                                                <span
                                                    class="text-sm text-yellow-600 font-light px-4 py-4 whitespace-nowrap">PENDING</span>

                                                <% } %>
                                </td>

                                <% if(pro.status=='delivered' ) {%>
                                    <td class="pl-5">
                                        <button
                                            class="btn-sm btn_3  uppercase transition-all duration-150 bg-black rounded shadow outline-none active:bg-black hover:shadow-md focus:outline-none ease text-xs text-white font-bold px-2 py-2 whitespace-nowrap"
                                            type="button"
                                            onclick="showReturnConfirmation('<%=pro._id%>')">RETURN</button>
                                    </td>
                                    <%} else if(pro.status=='cancelled' ){%>
                                        <td class="pl-3"></td>
                                        <%}else if(pro.status=="Returned" ){%>
                                            <td>ORDER RETURNED</td>
                                            <%}else{%>
                                                <td class="pl-5">
                                                    <button
                                                        class="btn-sm btn_3  uppercase transition-all duration-150 bg-black rounded shadow outline-none active:bg-black hover:shadow-md focus:outline-none ease text-xs text-white font-bold px-2 py-2 whitespace-nowrap"
                                                        type="button"
                                                        onclick="showCancelConfirmation('<%=pro._id%>','<%=pro.status%>')">Cancel</button>
                                                </td>
                                                <% } %>
                            </tr>
                            <% })%>
                </tbody>
            </table>
        </div>
        <div class="mt-10">
            <%-include('footer')%>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>




        <!-- handle the submission of data -->
        <!-- <script>

            const innerSubmitButton = document.getElementById('addAddressBtn');

            const formdata = document.getElementById('addAddress')
            console.log(formdata)
            innerSubmitButton.addEventListener('click', function (e) {
                console.log("reached");
                e.preventDefault(); // Prevent the inner form from submitting immediately
                formdata.submit(); // Submit the inner form
            });
        </script> -->



    <script>
    const innerSubmitButton = document.getElementById('addAddressBtn');
 
    const formdata = document.getElementById('addAddress');
    const error= document.getElementById('global-address-error')
    error.innerText=''

    innerSubmitButton.addEventListener('click', function (e) {
        // Your validation logic here
        if (!validateForm()) {
            e.preventDefault(); // Prevent form submission if validation fails
            return;
        }

        // If validation passes, submit the form
        formdata.submit();
    });

    function validateForm() {
    
    error.innerHTML = '';

    // Your validation logic here
    var address = document.getElementById('address').value.trim();
    var addressRegex = /^[A-Za-z0-9\s,.'-]+$/;
    document.getElementById("addressError").innerHTML = "";

    const state = document.querySelector('.state-addAdress').value;
    const city = document.querySelector('.city-address').value;
    const country = document.querySelector('.country-address').value;    
    console.log(state, 'state');

    var textRegex = /^[A-Za-z\s]+$/;

    var pin = document.getElementById('pin').value;
    var pinRegex = /^\d{6}$/;
    document.getElementById("pinError").innerHTML = "";





    if (!pinRegex.test(pin)) {
        error.innerHTML = 'Invalid PIN. Please enter 6 digits.';
        return false;
    } else if (state.trim() === ''||city.trim()==='' || country.trim()==='') {
        error.innerHTML = ' cannot be empty.';
        return false;
    }
    let specialKeyRegex = /\W/; 



    let numRegex = /\d/;
 let cityStr = city.toString();
if (numRegex.test(cityStr)) {
   error.innerHTML = 'cannot contain number';
   return false;
}


let stateStr = state.toString()

if (numRegex.test(stateStr)) {
   error.innerHTML = 'cannot contain number';
   return false;
}

let countryStr = country.toString()

if (numRegex.test(countryStr)) {
   error.innerHTML = 'cannot contain number';
   return false;
}


    // Add more validation logic for other fields if needed

    return true; // Return true if all validations pass
}



</script>



 

        <script>
            const btn = document.querySelectorAll('.cancel')
            btn.forEach(item => {
                item.addEventListener('click', () => {
                    const status = "cancelled"
                    const oid = item.dataset.oid;
                    fetch('/cancelOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ status: status, oId: oid }),
                    })
                        .then(response => response.json())
                        .catch((error) => {
                            console.error('Error:', error);
                        });
                    window.location.reload()

                })

            });

        </script>

        <!-- Scripts -->
        <script>
            const openEditModalButton = document.getElementById('openEditModal');
            const editModal = document.getElementById('editModal');
            const closeEditModalButton = document.getElementById('closeEditModal');

            openEditModalButton.addEventListener('click', (event) => {
                event.preventDefault();
                editModal.classList.remove('invisible');
            });

            closeEditModalButton.addEventListener('click', () => {
                editModal.classList.add('invisible');
            });

            function closeEditModal() {
                editModal.classList.add('invisible');
            }
        </script>

        <script>
            let modal = document.querySelectorAll('.editAddressModal')
            // Function to open the modal
            function openEditAddressModal(i) {
                modal[i].classList.remove('hidden');

            }

            // // Function to close the modal
            // function closeEditAddressModal() {
            //     document.querySelectorAll('.editAddressModal').forEach(element => {
            //         element.classList.add('hidden');
            //     });
            // }
            // Event listener for the "EDIT" button
            document.querySelectorAll('.openEditAddressModalButton').forEach((element, i) => {
                element.addEventListener('click', () => openEditAddressModal(i));
            });

            // Event listener for the close button in the modal
            document.getElementById('closeEditAddressModal').addEventListener('click', closeEditAddressModal);
        </script>

        <script>
            function showCancelConfirmation(orderId) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'You won\'t be able to revert this!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, cancel it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // User clicked "Yes, cancel it!"
                        cancelOrder(orderId);
                    }
                });
            }

            function cancelOrder(orderId, Status) {
                fetch('/cancelOrder', {
                    method: "POST",
                    body: JSON.stringify({ oId: orderId, status: Status }),
                    headers: {
                        "Content-Type": "application/json",
                    }
                })
                    .then((res) => {
                        console.log('Response from server:', res);
                        window.location.reload();
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                    });

            }
        </script>

<!-- script for address validation -->

<!-- <script>

function validateForm(e) {
    e.preventDefault();
    // Get form values
    var pin = document.getElementById('pin').value;
    console.log(pin);
    // var address = document.getElementById('address').value.trim(); // Corrected ID
    // var state = document.getElementById('state').value.trim();
    // var city = document.getElementById('city').value.trim();
    // var country = document.getElementById('country').value.trim();

    
    // Regular expressions for validation
    // var addressRegex = /^[A-Za-z0-9\s,.'-]+$/;
    var pinRegex = /^\d{6}$/;
    // var textRegex = /^[A-Za-z\s]+$/;

    // Reset previous error messages
    // document.getElementById("addressError").innerHTML = "";
    document.getElementById("pinError").innerHTML = "";
    // document.getElementById("sccError").innerHTML = "";

    // Validate full name

    // Validate PIN
    // if (!pinRegex.test(pin)) {
    //   document.getElementById("pinError").innerHTML = "Invalid PIN.";
    
    //   return false;
    // }

//     if (!addressRegex.test(address)) {
//     document.getElementById("addressError").innerHTML = "Invalid address. Please enter only alphabetic characters";
//       e.preventDefault();
//    return false;
// }

//     // Validate  state, and city and country
//     if ( !textRegex.test(state) || !textRegex.test(city) || !textRegex.test(country)) {
//       document.getElementById("sccError").innerHTML = "Invalid input. Please enter only alphabetic characters without spaces or special characters.";
//       e.preventDefault();
//       return false;
//     }


//     return true;
//   }

</script> -->

</body>

</html>





<td><%= report.username %></td>
                    <td><%= report.products[0].productName %></td>
                    <td><%= report.products[0].quantity %></td>
                    <td>₹<%= report.products[0].price.toFixed(2) %></td>
                    <td><%= report.orderStatus %></td>
                    <td><%= report.orderDate.toISOString().split('T')[0] %></td>
                    <td><%= report.address.address %></td>
                    <td><%= report.address.city %></td>
                    <td><%= report.address.pincode %></td>
                    <td><%= report.address.phone %></td>