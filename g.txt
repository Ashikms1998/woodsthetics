exports.productsGet = async (req, res) => {
    try {
        //pagination here
        const productsPerPage = 9;
        const currentPage = parseInt(req.query.page) || 1;

        const totalProducts = await productCollection.countDocuments({ blocked: false });
        const totalPages = Math.ceil(totalProducts / productsPerPage);

        const skip = (currentPage - 1) * productsPerPage;

        //pagination end here

        const userData = req.session.user
        const categoryFilter = await categoryCollection.find({ blockStatus: false })

        // const totalProd = await productCollection.find({ blocked: false })
        
        let categoryA = req.body.selectOption;
        let productData

        if (categoryA) {
            productData = await productCollection.find({ category: categoryA, blocked: false }).skip(skip).limit(productsPerPage);

        } else {
            productData = await productCollection.find({ blocked: false }).skip(skip).limit(productsPerPage);

        }

        const data = await productCollection.aggregate([
            {
                $match: { blocked: false }
            },
            
            {
                $lookup:
                {
                    from:'offerCollection',
                    localField:'productname',
                    foreignField:'productName',
                    as:'productOffer'
                },
            },
            {
                $lookup:
                {
                    from:'offerCollection',
                    localField:'categoryname',
                    foreignField:'categoryName',
                    as:'categoryOffer'
                },  
            }
        ])

        return res.render("user/products", { data,productData, userData, categoryFilter, currentPage: currentPage, totalPages: totalPages })
    } catch (error) {
        console.log(error);
    }
};


//forgot password

exports.forgotpasswordPost = async (req, res) => {
    try {
        let email = req.body.email;
        req.session.email = email
        if (email) {
            const user = await logDetails.findOne({ email: email });

            if (user) {
                return res.render('user/changepassword');
            }
        }

    } catch (error) {
        console.error("Error in forgot password get:", error);
    
    }
};